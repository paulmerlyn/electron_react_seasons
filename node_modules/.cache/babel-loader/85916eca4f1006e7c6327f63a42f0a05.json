{"ast":null,"code":"var _jsxFileName = \"/home/pmerlyn/react_playground/stephen_grider_udemy/seasons/src/SeasonDisplay.js\";\nimport './SeasonDisplay.css';\nimport React from 'react'; // We don't actually call this because I passed season as a precalculated property from the App parent component that makes SeasonDisplay its child\n\nvar getSeason = function getSeason(lat, month) {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? 'summer' : 'winter';\n  } else {\n    return lat > 0 ? 'winter' : 'summer';\n  }\n};\n\nvar seasonConfig = {\n  summer: {\n    iconName: 'massive red sun icon',\n    text: \"Let's hit the beach\"\n  },\n  winter: {\n    iconName: 'massive blue snowflake icon',\n    text: \"Burr, it's cold!\"\n  }\n};\n\nvar SeasonDisplay = function SeasonDisplay(props) {\n  var season = props.season; //let season = 'summer';\n\n  var _seasonConfig$season = seasonConfig[season],\n      iconName = _seasonConfig$season.iconName,\n      text = _seasonConfig$season.text; //text = (this.season === 'summer' ? 'Let&rsquo;s hit the beach' : 'Burr, it&rsquo;s chilly!');\n  //getIconName = (season) => { return (season === 'summer' ? 'sun icon' : 'snow icon')}\n  //renderHTML = (rawHTML) => React.createElement(\"span\", { dangerouslySetInnerHTML: { __html: rawHTML } });\n\n  return React.createElement(\"div\", {\n    className: seseason,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"top-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: iconName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    className: \"ui header centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, text), React.createElement(\"div\", {\n    className: \"bottom-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: iconName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n};\n\nexport default SeasonDisplay;","map":{"version":3,"sources":["/home/pmerlyn/react_playground/stephen_grider_udemy/seasons/src/SeasonDisplay.js"],"names":["React","getSeason","lat","month","seasonConfig","summer","iconName","text","winter","SeasonDisplay","props","season","seseason"],"mappings":";AAAA,OAAO,qBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAIC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAC5B,MAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AACxB,WAAOD,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACH,GAFD,MAEO;AACH,WAAOA,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACH;AACJ,CAND;;AAQA,IAAME,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,QAAQ,EAAE,sBAAZ;AAAoCC,IAAAA,IAAI,EAAE;AAA1C,GADS;AAEjBC,EAAAA,MAAM,EAAE;AAAEF,IAAAA,QAAQ,EAAE,6BAAZ;AAA2CC,IAAAA,IAAI,EAAE;AAAjD;AAFS,CAArB;;AAMA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC3B,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB,CAD2B,CAE3B;;AAF2B,6BAIAP,YAAY,CAACO,MAAD,CAJZ;AAAA,MAInBL,QAJmB,wBAInBA,QAJmB;AAAA,MAITC,IAJS,wBAITA,IAJS,EAM3B;AAEA;AAEA;;AAEA,SACI;AAAK,IAAA,SAAS,EAAEK,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAEN,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCC,IAApC,CAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAED,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ;AAYH,CAxBD;;AA0BA,eAAeG,aAAf","sourcesContent":["import './SeasonDisplay.css';\nimport React from 'react';\n\n// We don't actually call this because I passed season as a precalculated property from the App parent component that makes SeasonDisplay its child\nlet getSeason = (lat, month) => {\n    if (month > 2 && month < 9) {\n        return lat > 0 ? 'summer' : 'winter';\n    } else {\n        return lat > 0 ? 'winter' : 'summer';\n    }\n}\n\nconst seasonConfig = {\n    summer: { iconName: 'massive red sun icon', text: \"Let's hit the beach\" },\n    winter: { iconName: 'massive blue snowflake icon', text: \"Burr, it's cold!\" }\n}\n\n\nconst SeasonDisplay = props => {\n    const season = props.season;\n    //let season = 'summer';\n\n    const { iconName, text } = seasonConfig[season];\n\n    //text = (this.season === 'summer' ? 'Let&rsquo;s hit the beach' : 'Burr, it&rsquo;s chilly!');\n\n    //getIconName = (season) => { return (season === 'summer' ? 'sun icon' : 'snow icon')}\n\n    //renderHTML = (rawHTML) => React.createElement(\"span\", { dangerouslySetInnerHTML: { __html: rawHTML } });\n    \n    return (\n        <div className={seseason}>\n            <div className=\"top-left\">\n                <i className={iconName} />\n            </div>\n            <h1 className=\"ui header centered\">{text}</h1>\n            <div className=\"bottom-right\">\n                <i className={iconName} />\n            </div>\n        </div>\n    )\n\n}\n\nexport default SeasonDisplay;"]},"metadata":{},"sourceType":"module"}